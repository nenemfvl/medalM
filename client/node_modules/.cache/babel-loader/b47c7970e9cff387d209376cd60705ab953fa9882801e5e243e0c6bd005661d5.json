{"ast":null,"code":"var _jsxFileName = \"D:\\\\MedalM\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Verificar se h치 um token salvo no localStorage\n    const token = localStorage.getItem('token');\n    if (token) {\n      // O token ser치 verificado no App.js usando React Query\n      setIsLoading(false);\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  const login = (userData, token) => {\n    setUser(userData);\n    localStorage.setItem('token', token);\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  const updateUser = userData => {\n    setUser(prev => ({\n      ...prev,\n      ...userData\n    }));\n  };\n  const value = {\n    user,\n    setUser,\n    isLoading,\n    login,\n    logout,\n    updateUser,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","token","localStorage","getItem","login","userData","setItem","logout","removeItem","updateUser","prev","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MedalM/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Verificar se h치 um token salvo no localStorage\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // O token ser치 verificado no App.js usando React Query\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData, token) => {\r\n    setUser(userData);\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    setUser(prev => ({ ...prev, ...userData }));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    setUser,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT;MACAD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAGA,CAACC,QAAQ,EAAEJ,KAAK,KAAK;IACjCH,OAAO,CAACO,QAAQ,CAAC;IACjBH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;EACtC,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBT,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,MAAMC,UAAU,GAAIJ,QAAQ,IAAK;IAC/BP,OAAO,CAACY,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,GAAGL;IAAS,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMM,KAAK,GAAG;IACZd,IAAI;IACJC,OAAO;IACPC,SAAS;IACTK,KAAK;IACLG,MAAM;IACNE,UAAU;IACVG,eAAe,EAAE,CAAC,CAACf;EACrB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAChCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,GAAA,CA5CWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}