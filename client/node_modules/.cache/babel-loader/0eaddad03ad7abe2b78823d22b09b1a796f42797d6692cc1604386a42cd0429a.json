{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Configuração base do Axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  // 30 segundos\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para adicionar token de autenticação\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para tratamento de respostas\napiClient.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('API Error:', error);\n\n  // Tratamento de erros específicos\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n    switch (status) {\n      case 401:\n        // Token inválido ou expirado\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n        toast.error('Sessão expirada. Faça login novamente.');\n        break;\n      case 403:\n        toast.error('Acesso negado.');\n        break;\n      case 404:\n        toast.error('Recurso não encontrado.');\n        break;\n      case 429:\n        toast.error('Muitas tentativas. Tente novamente em alguns minutos.');\n        break;\n      case 500:\n        toast.error('Erro interno do servidor. Tente novamente mais tarde.');\n        break;\n      default:\n        toast.error((data === null || data === void 0 ? void 0 : data.error) || (data === null || data === void 0 ? void 0 : data.message) || 'Erro inesperado.');\n    }\n  } else if (error.request) {\n    // Erro de rede\n    toast.error('Erro de conexão. Verifique sua internet.');\n  } else {\n    // Outro tipo de erro\n    toast.error('Erro inesperado.');\n  }\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","console","status","removeItem","window","location","href","message"],"sources":["D:/MedalM/client/src/api/client.js"],"sourcesContent":["import axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Configuração base do Axios\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000, // 30 segundos\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor para adicionar token de autenticação\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor para tratamento de respostas\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    \r\n    // Tratamento de erros específicos\r\n    if (error.response) {\r\n      const { status, data } = error.response;\r\n      \r\n      switch (status) {\r\n        case 401:\r\n          // Token inválido ou expirado\r\n          localStorage.removeItem('token');\r\n          window.location.href = '/login';\r\n          toast.error('Sessão expirada. Faça login novamente.');\r\n          break;\r\n          \r\n        case 403:\r\n          toast.error('Acesso negado.');\r\n          break;\r\n          \r\n        case 404:\r\n          toast.error('Recurso não encontrado.');\r\n          break;\r\n          \r\n        case 429:\r\n          toast.error('Muitas tentativas. Tente novamente em alguns minutos.');\r\n          break;\r\n          \r\n        case 500:\r\n          toast.error('Erro interno do servidor. Tente novamente mais tarde.');\r\n          break;\r\n          \r\n        default:\r\n          toast.error(data?.error || data?.message || 'Erro inesperado.');\r\n      }\r\n    } else if (error.request) {\r\n      // Erro de rede\r\n      toast.error('Erro de conexão. Verifique sua internet.');\r\n    } else {\r\n      // Outro tipo de erro\r\n      toast.error('Erro inesperado.');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;;AAEnC;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,SAAS,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC7BC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,SAAS,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAChCS,QAAQ,IAAK;EACZ,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACAJ,KAAK,IAAK;EACTK,OAAO,CAACL,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;;EAElC;EACA,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,MAAM;MAAEG,MAAM;MAAEF;IAAK,CAAC,GAAGJ,KAAK,CAACG,QAAQ;IAEvC,QAAQG,MAAM;MACZ,KAAK,GAAG;QACN;QACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;QAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B5B,KAAK,CAACkB,KAAK,CAAC,wCAAwC,CAAC;QACrD;MAEF,KAAK,GAAG;QACNlB,KAAK,CAACkB,KAAK,CAAC,gBAAgB,CAAC;QAC7B;MAEF,KAAK,GAAG;QACNlB,KAAK,CAACkB,KAAK,CAAC,yBAAyB,CAAC;QACtC;MAEF,KAAK,GAAG;QACNlB,KAAK,CAACkB,KAAK,CAAC,uDAAuD,CAAC;QACpE;MAEF,KAAK,GAAG;QACNlB,KAAK,CAACkB,KAAK,CAAC,uDAAuD,CAAC;QACpE;MAEF;QACElB,KAAK,CAACkB,KAAK,CAAC,CAAAI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEJ,KAAK,MAAII,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,OAAO,KAAI,kBAAkB,CAAC;IACnE;EACF,CAAC,MAAM,IAAIX,KAAK,CAACP,OAAO,EAAE;IACxB;IACAX,KAAK,CAACkB,KAAK,CAAC,0CAA0C,CAAC;EACzD,CAAC,MAAM;IACL;IACAlB,KAAK,CAACkB,KAAK,CAAC,kBAAkB,CAAC;EACjC;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}